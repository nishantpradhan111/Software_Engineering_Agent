/eval.sh: line 2: set: pipefail: invalid option name
+ source $'/opt/miniconda3/bin/activate\r'
/eval.sh: line 3: /opt/miniconda3/bin/activate: No such file or directory
+ conda activate $'testbed\r'

CondaError: Run 'conda init' before 'conda activate'

+ cd $'/testbed\r'
/eval.sh: line 5: cd: $'/testbed\r': No such file or directory
+ git config --global --add safe.directory $'/testbed\r'
+ cd $'/testbed\r'
/eval.sh: line 7: cd: $'/testbed\r': No such file or directory
+ git $'status\r'
git: 'status' is not a git command. See 'git --help'.

The most similar command is
	status
+ git $'show\r'
git: 'show' is not a git command. See 'git --help'.

The most similar command is
	show
+ git -c core.fileMode=false diff $'25fbcce5b1a4c7e3956e6062930f4a44ce95a632\r'
fatal: ambiguous argument '25fbcce5b1a4c7e3956e6062930f4a44ce95a632?': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
+ source $'/opt/miniconda3/bin/activate\r'
/eval.sh: line 11: /opt/miniconda3/bin/activate: No such file or directory
+ conda activate $'testbed\r'

CondaError: Run 'conda init' before 'conda activate'

+ python -m pip install -e $'.\r'
ERROR: . is not a valid editable requirement. It should either be a path to a local project or a VCS URL (beginning with bzr+http, bzr+https, bzr+ssh, bzr+sftp, bzr+ftp, bzr+lp, bzr+file, git+http, git+https, git+ssh, git+git, git+file, hg+file, hg+http, hg+https, hg+ssh, hg+static-http, svn+ssh, svn+http, svn+https, svn+svn, svn+file).
+ git checkout 25fbcce5b1a4c7e3956e6062930f4a44ce95a632 sympy/core/tests/test_subs.py $'sympy/functions/elementary/tests/test_complexes.py\r'
error: pathspec 'sympy/functions/elementary/tests/test_complexes.py?' did not match any file(s) known to git
+ git apply -v -
Checking patch sympy/core/tests/test_subs.py...
error: while searching for:
def test_issue_19326():?
    x, y = [i(t) for i in map(Function, 'xy')]?
    assert (x*y).subs({x: 1 + x, y: x}) == (1 + x)*x?

error: patch failed: sympy/core/tests/test_subs.py:855
error: sympy/core/tests/test_subs.py: patch does not apply
Checking patch sympy/functions/elementary/tests/test_complexes.py...
error: while searching for:
    pi, Rational, re, S, sign, sin, sqrt, Symbol, symbols, transpose,?
    zoo, exp_polar, Piecewise, Interval, comp, Integral, Matrix,?
    ImmutableMatrix, SparseMatrix, ImmutableSparseMatrix, MatrixSymbol,?
    FunctionMatrix, Lambda, Derivative)?
from sympy.core.expr import unchanged?
from sympy.core.function import ArgumentIndexError?
from sympy.testing.pytest import XFAIL, raises?

error: patch failed: sympy/functions/elementary/tests/test_complexes.py:4
error: sympy/functions/elementary/tests/test_complexes.py: patch does not apply
+ : '>>>>> Start Test Output'
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ bin/test -C --verbose sympy/core/tests/test_subs.py $'sympy/functions/elementary/tests/test_complexes.py\r'
Traceback (most recent call last):
  File "/testbed/sympy/__init__.py", line 22, in <module>
    import mpmath
ModuleNotFoundError: No module named 'mpmath'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/bin/test", line 95, in <module>
    import sympy
  File "/testbed/sympy/__init__.py", line 24, in <module>
    raise ImportError("SymPy now depends on mpmath as an external library. "
ImportError: SymPy now depends on mpmath as an external library. See https://docs.sympy.org/latest/install.html#mpmath for more information.
+ : '>>>>> End Test Output'
+ git checkout 25fbcce5b1a4c7e3956e6062930f4a44ce95a632 sympy/core/tests/test_subs.py $'sympy/functions/elementary/tests/test_complexes.py\r'
error: pathspec 'sympy/functions/elementary/tests/test_complexes.py?' did not match any file(s) known to git
