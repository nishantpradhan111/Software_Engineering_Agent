/eval.sh: line 2: set: pipefail: invalid option name
+ source $'/opt/miniconda3/bin/activate\r'
/eval.sh: line 3: /opt/miniconda3/bin/activate: No such file or directory
+ conda activate $'testbed\r'

CondaError: Run 'conda init' before 'conda activate'

+ cd $'/testbed\r'
/eval.sh: line 5: cd: $'/testbed\r': No such file or directory
+ git config --global --add safe.directory $'/testbed\r'
+ cd $'/testbed\r'
/eval.sh: line 7: cd: $'/testbed\r': No such file or directory
+ git $'status\r'
git: 'status' is not a git command. See 'git --help'.

The most similar command is
	status
+ git $'show\r'
git: 'show' is not a git command. See 'git --help'.

The most similar command is
	show
+ git -c core.fileMode=false diff $'f91de695585c1fbc7d4f49ee061f64fcb1c2c4d8\r'
fatal: ambiguous argument 'f91de695585c1fbc7d4f49ee061f64fcb1c2c4d8?': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
+ source $'/opt/miniconda3/bin/activate\r'
/eval.sh: line 11: /opt/miniconda3/bin/activate: No such file or directory
+ conda activate $'testbed\r'

CondaError: Run 'conda init' before 'conda activate'

+ python -m pip install -e $'.\r'
ERROR: . is not a valid editable requirement. It should either be a path to a local project or a VCS URL (beginning with bzr+http, bzr+https, bzr+ssh, bzr+sftp, bzr+ftp, bzr+lp, bzr+file, git+http, git+https, git+ssh, git+git, git+file, hg+file, hg+http, hg+https, hg+ssh, hg+static-http, svn+ssh, svn+http, svn+https, svn+svn, svn+file).
+ git checkout f91de695585c1fbc7d4f49ee061f64fcb1c2c4d8 sympy/printing/tests/test_numpy.py $'sympy/printing/tests/test_pycode.py\r'
error: pathspec 'sympy/printing/tests/test_pycode.py?' did not match any file(s) known to git
+ git apply -v -
Checking patch sympy/printing/tests/test_numpy.py...
error: while searching for:
from sympy import (?
    Piecewise, lambdify, Equality, Unequality, Sum, Mod, cbrt, sqrt,?
    MatrixSymbol, BlockMatrix?
)?
from sympy import eye?
from sympy.abc import x, i, j, a, b, c, d?

error: patch failed: sympy/printing/tests/test_numpy.py:1
error: sympy/printing/tests/test_numpy.py: patch does not apply
Checking patch sympy/printing/tests/test_pycode.py...
error: while searching for:
from sympy.core.numbers import pi?
from sympy.functions import acos, Piecewise, sign?
from sympy.logic import And, Or?
from sympy.matrices import SparseMatrix, MatrixSymbol?
from sympy.printing.pycode import (?
    MpmathPrinter, NumPyPrinter, PythonCodePrinter, pycode, SciPyPrinter?
)?

error: patch failed: sympy/printing/tests/test_pycode.py:7
error: sympy/printing/tests/test_pycode.py: patch does not apply
+ : '>>>>> Start Test Output'
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ bin/test -C --verbose sympy/printing/tests/test_numpy.py $'sympy/printing/tests/test_pycode.py\r'
Traceback (most recent call last):
  File "/testbed/sympy/__init__.py", line 19, in <module>
    import mpmath
ModuleNotFoundError: No module named 'mpmath'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/bin/test", line 105, in <module>
    import sympy
  File "/testbed/sympy/__init__.py", line 21, in <module>
    raise ImportError("SymPy now depends on mpmath as an external library. "
ImportError: SymPy now depends on mpmath as an external library. See https://docs.sympy.org/latest/install.html#mpmath for more information.
+ : '>>>>> End Test Output'
+ git checkout f91de695585c1fbc7d4f49ee061f64fcb1c2c4d8 sympy/printing/tests/test_numpy.py $'sympy/printing/tests/test_pycode.py\r'
error: pathspec 'sympy/printing/tests/test_pycode.py?' did not match any file(s) known to git
