```diff
--- a/sklearn/utils/validation.py
+++ b/sklearn/utils/validation.py
@@ -545,7 +545,6 @@
     # store reference to original array to check if copy is needed when
     # function returns
     array_orig = array
-
 
     # store whether originally we wanted numeric dtype
     dtype_numeric = isinstance(dtype, six.string_types) and dtype == "numeric"
@@ -554,12 +553,11 @@
         # not a data type (e.g. a column named dtype in a pandas DataFrame)
         dtype_orig = None
 
-    # check if the object contains several dtypes (typically a pandas
-    # DataFrame), and store them. If not, store None.
+    # check if the object contains several dtypes (typically a pandas DataFrame)
+    # and store them. If not, store None.
     dtypes_orig = None
     if hasattr(array_orig, "dtypes") and hasattr(array_orig, "__array__"):
         dtypes_orig = np.array(array_orig.dtypes)
-
 
     if dtype_numeric:
         if dtype_orig is not None and dtype_orig.kind == "O":
@@ -687,13 +685,10 @@
                              % (n_features, shape_repr, ensure_min_features,
                                 context))
 
-    if warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig:
+    if (warn_on_dtype and dtypes_orig is not None and
+            {array.dtype} != set(dtypes_orig)):
         msg = ("Data with input dtype %s was converted to %s%s."
-               % (dtype_orig, array.dtype, context))
+               % (', '.join(map(str, sorted(set(dtypes_orig)))), array.dtype, context))
         warnings.warn(msg, DataConversionWarning)
 
     if copy and np.may_share_memory(array, array_orig):
         array = np.array(array, dtype=dtype, order=order)
-

```