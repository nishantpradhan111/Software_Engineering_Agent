```diff
--- a/django/db/models/fields/related_lookups.py
+++ b/django/db/models/fields/related_lookups.py
@@ -165,14 +165,17 @@
         return qs
 
     def get_prep_lookup(self):
-        if isinstance(self.rhs, QuerySet):
+        if hasattr(self.rhs, '_prepare'):
+            self.rhs = self.rhs._prepare()
+
+        if isinstance(self.rhs, QuerySet) and not hasattr(self.rhs, '_result_cache'):
             # For QuerySets, evaluate the queryset to a list to prevent issues
             # with the queryset being consumed multiple times.  This avoids problems
             # particularly with subqueries where the queryset can't be cloned.
             self.rhs = list(self.rhs)
-        elif hasattr(self.rhs, '__iter__') and not isinstance(self.rhs, (str, list, tuple, set, frozenset)):
+        elif hasattr(self.rhs, '__iter__') and not isinstance(self.rhs, (str, list, tuple, set, frozenset, QuerySet)):
             # Prevent other iterators from being consumed
             self.rhs = list(self.rhs)
-
-        if hasattr(self.rhs, '_prepare'):
-            self.rhs = self.rhs._prepare()
+        elif hasattr(self.rhs, '__getitem__') and not isinstance(self.rhs, (str, list, tuple)):
+            # Prevent other indexable objects from being consumed (e.g., numpy arrays)
+            self.rhs = list(self.rhs)

```