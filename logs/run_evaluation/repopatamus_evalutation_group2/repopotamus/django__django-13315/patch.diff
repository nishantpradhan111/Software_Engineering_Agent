```
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -153,7 +153,7 @@
     """Apply limit_choices_to to the formfield's queryset if needed."""
     if hasattr(formfield, 'queryset') and hasattr(formfield, 'get_limit_choices_to'):
         limit_choices_to = formfield.get_limit_choices_to()
-        if limit_choices_to is not None:
+        if limit_choices_to is not None and not getattr(formfield.queryset, '_limit_choices_to_applied', False):
             formfield.queryset = formfield.queryset.complex_filter(limit_choices_to)
 
 
@@ -1013,7 +1013,6 @@
         # accessed) so that we can ensure the QuerySet has not been consumed. This
         # construct might look complicated but it allows for lazy evaluation of
         # the queryset.
-
         return self.iterator(self)
 
     choices = property(_get_choices, ChoiceField._set_choices)
```