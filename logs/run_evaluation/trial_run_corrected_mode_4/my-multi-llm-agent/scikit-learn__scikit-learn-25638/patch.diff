```diff
--- a/sklearn/utils/multiclass.py
+++ b/sklearn/utils/multiclass.py
@@ -155,14 +155,14 @@ def is_multilabel(y):
     if hasattr(y, "__array__") or isinstance(y, Sequence) or is_array_api:
         # DeprecationWarning will be replaced by ValueError, see NEP 34
         # https://numpy.org/neps/nep-0034-infer-dtype-is-object.html
-        check_y_kwargs = dict(\
+        check_y_kwargs = dict(
             accept_sparse=True,
             allow_nd=True,
             force_all_finite=False,
             ensure_2d=False,
             ensure_min_samples=0,
             ensure_min_features=0,
-        )\
+        )
         with warnings.catch_warnings():
             warnings.simplefilter("error", np.VisibleDeprecationWarning)
             try:
@@ -302,14 +302,14 @@ def type_of_target(y, input_name=""):\
     # https://numpy.org/neps/nep-0034-infer-dtype-is-object.html
     # We therefore catch both deprecation (NumPy < 1.24) warning and
     # value error (NumPy >= 1.24).\
-    check_y_kwargs = dict(\
+    check_y_kwargs = dict(
         accept_sparse=True,
         allow_nd=True,
         force_all_finite=False,
         ensure_2d=False,
         ensure_min_samples=0,
         ensure_min_features=0,
-    )\
+    )
     with warnings.catch_warnings():
         warnings.simplefilter("error", np.VisibleDeprecationWarning)
         y = check_array(y, dtype=None, **check_y_kwargs)
```