```diff
--- a/sklearn/neighbors/base.py
+++ b/sklearn/neighbors/base.py
@@ -265,12 +265,10 @@
                     "Expected n_neighbors > 0. Got %d" %\
                     self.n_neighbors
                 )
-            else:
-                if not np.issubdtype(type(self.n_neighbors), np.integer):
-                    raise TypeError(
-                        "n_neighbors does not take %s value, "\
-                        "enter integer value" %\
-                        type(self.n_neighbors))
+            if not np.issubdtype(type(self.n_neighbors), np.integer):
+                raise TypeError(
+                    "n_neighbors does not take %s value, "
+                    "enter integer value" % type(self.n_neighbors))
 
         return self
 
@@ -330,14 +328,10 @@
         if n_neighbors is None:
             n_neighbors = self.n_neighbors
         if n_neighbors <= 0:
-            raise ValueError(
-                "Expected n_neighbors > 0. Got %d" %\
-                n_neighbors
-            )
-        else:\n+
                 raise ValueError(
                     "Expected n_neighbors > 0. Got %d" % n_neighbors
                 )
+
         if not np.issubdtype(type(n_neighbors), np.integer):
             raise TypeError(
                 "n_neighbors does not take %s value, "
```