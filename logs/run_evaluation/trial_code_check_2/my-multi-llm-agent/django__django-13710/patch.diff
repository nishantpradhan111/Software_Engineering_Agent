```diff
--- a/tests/admin_inlines/tests.py
+++ b/tests/admin_inlines/tests.py
@@ -970,6 +970,55 @@
 class TestVerboseNameInlineForms(TestDataMixin, TestCase):
     factory = RequestFactory()
 
+    def test_verbose_name_inline(self):
+        class NonVerboseProfileInline(TabularInline):
+            model = Profile
+            verbose_name = 'Non-verbose child'
+
+        class VerboseNameProfileInline(TabularInline):
+            model = VerboseNameProfile
+            verbose_name = 'Child with verbose name'
+
+        class VerboseNamePluralProfileInline(TabularInline):
+            model = VerboseNamePluralProfile
+            verbose_name = 'Child with verbose name plural'
+
+        class BothVerboseNameProfileInline(TabularInline):
+            model = BothVerboseNameProfile
+            verbose_name = 'Child with both verbose names'
+
+        modeladmin = ModelAdmin(ProfileCollection, admin_site)
+        modeladmin.inlines = [
+            NonVerboseProfileInline,
+            VerboseNameProfileInline,
+            VerboseNamePluralProfileInline,
+            BothVerboseNameProfileInline,
+        ]
+        obj = ProfileCollection.objects.create()
+        url = reverse('admin:admin_inlines_profilecollection_change', args=(obj.pk,))
+        request = self.factory.get(url)
+        request.user = self.superuser
+        response = modeladmin.changeform_view(request, str(obj.pk))
+        self.assertNotContains(response, 'Add another Profile')
+        # Non-verbose model.
+        self.assertContains(response, '<h2>Non-verbose childs</h2>')
+        self.assertContains(response, 'Add another Non-verbose child')
+        self.assertNotContains(response, '<h2>Profiles</h2>')
+        # Model with verbose name.
+        self.assertContains(response, '<h2>Child with verbose names</h2>')
+        self.assertContains(response, 'Add another Child with verbose name')
+        self.assertNotContains(response, '<h2>Verbose Name Profiles</h2>')
+        self.assertNotContains(response, 'Add another Verbose Name Profile')
+        # Model with verbose name plural.
+        self.assertContains(response, '<h2>Child with verbose name plurals</h2>')
+        self.assertContains(response, 'Add another Child with verbose name plural')
+        self.assertNotContains(response, '<h2>Verbose Name Plural Profiles</h2>')
+        # Model with both verbose names.
+        self.assertContains(response, '<h2>Child with both verbose names</h2>')
+        self.assertContains(response, 'Add another Child with both verbose names')
+        self.assertNotContains(response, '<h2>Both Verbose Name Profiles</h2>')
+        self.assertNotContains(response, 'Add another Both Verbose Name Profile')
+
     def test_verbose_name_plural_inline(self):
         class NonVerboseProfileInline(TabularInline):
             model = Profile
```