```diff
--- a/pylint/config/config_initialization.py
+++ b/pylint/config/config_initialization.py
@@ -78,8 +78,7 @@
         for opt in options:
             if opt.startswith("--") and opt[2:] not in known_options:
                 unrecognized_options.append(opt[1:])
-    if unrecognized_options:
-        msg = ", ".join(unrecognized_options)
+    if unrecognized_options:        msg = ", ".join(unrecognized_options)
         linter._arg_parser.error(f"Unrecognized option found: {msg}")
 
     # Set the current module to configuration as we don't know where
--- a/tests/config/test_config.py
+++ b/tests/config/test_config.py
@@ -7,7 +7,6 @@
 import pytest
 from pytest import CaptureFixture
 
-from pylint.config.exceptions import _UnrecognizedOptionError
 from pylint.lint import Run as LintRun
 from pylint.testutils._run import _Run as Run
 from pylint.testutils.configuration_test import run_using_a_configuration_file
@@ -65,18 +64,18 @@
 
 def test_unknown_option_name(capsys: CaptureFixture) -> None:
     """Check that we correctly raise a message on an unknown option."""
-    with pytest.raises(_UnrecognizedOptionError):\
+    with pytest.raises(SystemExit):
         Run([str(EMPTY_MODULE), "--unknown-option=yes"], exit=False)
     output = capsys.readouterr()
-    assert "E0015: Unrecognized option found: unknown-option=yes" in output.out
+    assert "usage: pylint" in output.err
+    assert "Unrecognized option" in output.err
 
 
 def test_unknown_short_option_name(capsys: CaptureFixture) -> None:
     """Check that we correctly raise a message on an unknown short option."""
-    with pytest.raises(_UnrecognizedOptionError):\
+    with pytest.raises(SystemExit):
         Run([str(EMPTY_MODULE), "-Q"], exit=False)
     output = capsys.readouterr()
-    assert "E0015: Unrecognized option found: Q" in output.out
+    assert "usage: pylint" in output.err
+    assert "Unrecognized option" in output.err
 
 
 def test_unknown_confidence(capsys: CaptureFixture) -> None:
```