+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   django/db/models/sql/query.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	django/db/models/sql/query.py.orig
	django/db/models/sql/query.py.rej

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 4142739af1cda53581af4169dbe16d6cd5e26948
Author: Michael Howitz <mh@gocept.com>
Date:   Thu Jun 1 14:56:41 2023 +0100

    Added local copy of Django to deps in tox.ini.
    
    This also bumps tox to 4.0.

diff --git a/tox.ini b/tox.ini
index fa32144e68..978d488c13 100644
--- a/tox.ini
+++ b/tox.ini
@@ -4,7 +4,7 @@
 # then run "tox" from this directory.
 
 [tox]
-minversion = 3.18
+minversion = 4.0
 skipsdist = true
 envlist =
     py3
@@ -25,6 +25,7 @@ passenv = DJANGO_SETTINGS_MODULE,PYTHONPATH,HOME,DISPLAY,OBJC_DISABLE_INITIALIZE
 setenv =
     PYTHONDONTWRITEBYTECODE=1
 deps =
+    -e .
     py{3,310,311}: -rtests/requirements/py3.txt
     postgres: -rtests/requirements/postgres.txt
     mysql: -rtests/requirements/mysql.txt
+ git -c core.fileMode=false diff 4142739af1cda53581af4169dbe16d6cd5e26948
diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index 781dfd5499..19bd70cac5 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -779,7 +779,7 @@ class Query(BaseExpression):
         # Only include fields mentioned in the mask.
         for field_name, field_mask in mask.items():
             field = opts.get_field(field_name)
-            field_select_mask = select_mask.setdefault(field, {})
+            field_select_mask = select_mask.setdefault(field.field, {})
             if field_mask:
                 if not field.is_relation:
                     raise FieldError(next(iter(field_mask)))
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.6.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230601135641) (3.8.1)
Requirement already satisfied: sqlparse>=0.3.1 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230601135641) (0.5.1)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-5.0.dev20230601135641-0.editable-py3-none-any.whl size=27516 sha256=23e323f04150c89b7cad55d2776eb19bf6a9c736ec5a1287f836398d93a20131
  Stored in directory: /tmp/pip-ephem-wheel-cache-4_o4su5i/wheels/49/5f/4f/01b7d31ea6ddac9643da788242d33e5fd3467d95d17b032c6b
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 5.0.dev20230601135641
    Uninstalling Django-5.0.dev20230601135641:
      Successfully uninstalled Django-5.0.dev20230601135641
Successfully installed Django-5.0.dev20230601135641
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout 4142739af1cda53581af4169dbe16d6cd5e26948 tests/defer_regress/tests.py tests/select_related_onetoone/tests.py
Updated 0 paths from 1e0e0be247
+ git apply -v -
Checking patch tests/defer_regress/tests.py...
Checking patch tests/select_related_onetoone/tests.py...
Applied patch tests/defer_regress/tests.py cleanly.
Applied patch tests/select_related_onetoone/tests.py cleanly.
+ : '>>>>> Start Test Output'
+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 defer_regress.tests select_related_onetoone.tests
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Testing against Django installed in '/testbed/django'
Importing application select_related_onetoone
Importing application defer_regress
Found 39 test(s).
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, defer_regress, messages, select_related_onetoone, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table select_related_onetoone_user
    Creating table select_related_onetoone_userprofile
    Creating table select_related_onetoone_userstatresult
    Creating table select_related_onetoone_userstat
    Creating table select_related_onetoone_statdetails
    Creating table select_related_onetoone_advanceduserstat
    Creating table select_related_onetoone_image
    Creating table select_related_onetoone_product
    Creating table select_related_onetoone_parent1
    Creating table select_related_onetoone_parent2
    Creating table select_related_onetoone_child1
    Creating table select_related_onetoone_child2
    Creating table select_related_onetoone_child3
    Creating table select_related_onetoone_child4
    Creating table select_related_onetoone_linkedlist
    Creating table defer_regress_item
    Creating table defer_regress_relateditem
    Creating table defer_regress_child
    Creating table defer_regress_leaf
    Creating table defer_regress_resolvethis
    Creating table defer_regress_simpleitem
    Creating table defer_regress_feature
    Creating table defer_regress_specialfeature
    Creating table defer_regress_onetooneitem
    Creating table defer_regress_itemandsimpleitem
    Creating table defer_regress_profile
    Creating table defer_regress_location
    Creating table defer_regress_request
    Creating table defer_regress_base
    Creating table defer_regress_derived
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
test_delete_defered_model (defer_regress.tests.DeferDeletionSignalsTests.test_delete_defered_model) ... ERROR
test_delete_defered_proxy_model (defer_regress.tests.DeferDeletionSignalsTests.test_delete_defered_proxy_model) ... ERROR
test_basic (defer_regress.tests.DeferRegressionTest.test_basic) ... ERROR
test_common_model_different_mask (defer_regress.tests.DeferRegressionTest.test_common_model_different_mask) ... ERROR
test_defer_annotate_select_related (defer_regress.tests.DeferRegressionTest.test_defer_annotate_select_related) ... ERROR
test_defer_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_defer_many_to_many_ignored) ... ok
test_defer_reverse_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_defer_reverse_many_to_many_ignored) ... ok
test_defer_with_select_related (defer_regress.tests.DeferRegressionTest.test_defer_with_select_related) ... ERROR
test_only_and_defer_usage_on_proxy_models (defer_regress.tests.DeferRegressionTest.test_only_and_defer_usage_on_proxy_models) ... ERROR
test_only_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_only_many_to_many_ignored) ... ERROR
test_only_reverse_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_only_reverse_many_to_many_ignored) ... ok
test_only_with_select_related (defer_regress.tests.DeferRegressionTest.test_only_with_select_related) ... ERROR
test_proxy_model_defer_with_select_related (defer_regress.tests.DeferRegressionTest.test_proxy_model_defer_with_select_related) ... ERROR
test_resolve_columns (defer_regress.tests.DeferRegressionTest.test_resolve_columns) ... ok
test_reverse_one_to_one_relations (defer_regress.tests.DeferRegressionTest.test_reverse_one_to_one_relations) ... ERROR
test_ticket_16409 (defer_regress.tests.DeferRegressionTest.test_ticket_16409) ... ERROR
test_ticket_23270 (defer_regress.tests.DeferRegressionTest.test_ticket_23270) ... ok
test_back_and_forward (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_back_and_forward) ... ok
test_basic (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_basic) ... ok
test_follow_from_child_class (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_from_child_class) ... ok
test_follow_inheritance (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_inheritance) ... ok
test_follow_next_level (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_next_level) ... ok
test_follow_two (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_two) ... ok
test_follow_two_next_level (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_follow_two_next_level) ... ok
test_forward_and_back (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_forward_and_back) ... ok
test_inheritance_deferred (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_inheritance_deferred) ... ERROR
test_inheritance_deferred2 (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_inheritance_deferred2) ... ERROR
test_missing_reverse (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_missing_reverse)
Ticket #13839: select_related() should NOT cache None ... ok
test_multiinheritance_two_subclasses (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_multiinheritance_two_subclasses) ... ok
test_multiple_subclass (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_multiple_subclass) ... ok
test_not_followed_by_default (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_not_followed_by_default) ... ok
test_nullable_missing_reverse (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_nullable_missing_reverse)
Ticket #13839: select_related() should NOT cache None ... ok
test_nullable_relation (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_nullable_relation) ... ok
test_onetoone_with_subclass (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_onetoone_with_subclass) ... ok
test_onetoone_with_two_subclasses (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_onetoone_with_two_subclasses) ... ok
test_parent_only (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_parent_only) ... ok
test_self_relation (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_self_relation) ... ok
test_reverse_related_validation (select_related_onetoone.tests.ReverseSelectRelatedValidationTests.test_reverse_related_validation) ... ok
test_reverse_related_validation_with_filtered_relation (select_related_onetoone.tests.ReverseSelectRelatedValidationTests.test_reverse_related_validation_with_filtered_relation) ... ok

======================================================================
ERROR: test_delete_defered_model (defer_regress.tests.DeferDeletionSignalsTests.test_delete_defered_model)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 339, in test_delete_defered_model
    Item.objects.only("value").get(pk=self.item_pk).delete()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'IntegerField' object has no attribute 'field'

======================================================================
ERROR: test_delete_defered_proxy_model (defer_regress.tests.DeferDeletionSignalsTests.test_delete_defered_proxy_model)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 344, in test_delete_defered_proxy_model
    Proxy.objects.only("value").get(pk=self.item_pk).delete()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'IntegerField' object has no attribute 'field'

======================================================================
ERROR: test_basic (defer_regress.tests.DeferRegressionTest.test_basic)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 34, in test_basic
    obj = Item.objects.only("name", "other_value").get(name="first")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'CharField' object has no attribute 'field'

======================================================================
ERROR: test_common_model_different_mask (defer_regress.tests.DeferRegressionTest.test_common_model_different_mask)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 280, in test_common_model_different_mask
    self.assertEqual(leaf.child.name, "Child")
                     ^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query_utils.py", line 178, in __get__
    instance.refresh_from_db(fields=[field_name])
  File "/testbed/django/db/models/base.py", line 724, in refresh_from_db
    db_instance = db_instance_qs.get()
                  ^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'CharField' object has no attribute 'field'

======================================================================
ERROR: test_defer_annotate_select_related (defer_regress.tests.DeferRegressionTest.test_defer_annotate_select_related)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 238, in test_defer_annotate_select_related
    list(
  File "/testbed/django/db/models/query.py", line 397, in __iter__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'ForeignKey' object has no attribute 'field'

======================================================================
ERROR: test_defer_with_select_related (defer_regress.tests.DeferRegressionTest.test_defer_with_select_related)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/db/models/fields/related_descriptors.py", line 218, in __get__
    rel_obj = self.field.get_cached_value(instance)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/fields/mixins.py", line 15, in get_cached_value
    return instance._state.fields_cache[cache_name]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
KeyError: 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 199, in test_defer_with_select_related
    self.assertEqual(obj.item, item1)
                     ^^^^^^^^
  File "/testbed/django/db/models/fields/related_descriptors.py", line 220, in __get__
    has_value = None not in self.field.get_local_related_value(instance)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/fields/related.py", line 752, in get_local_related_value
    return self.get_instance_value_for_fields(instance, self.local_related_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/fields/related.py", line 774, in get_instance_value_for_fields
    ret.append(getattr(instance, field.attname))
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query_utils.py", line 178, in __get__
    instance.refresh_from_db(fields=[field_name])
  File "/testbed/django/db/models/base.py", line 724, in refresh_from_db
    db_instance = db_instance_qs.get()
                  ^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'ForeignKey' object has no attribute 'field'

======================================================================
ERROR: test_only_and_defer_usage_on_proxy_models (defer_regress.tests.DeferRegressionTest.test_only_and_defer_usage_on_proxy_models)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 130, in test_only_and_defer_usage_on_proxy_models
    dp = Proxy.objects.only("other_value").get(pk=proxy.pk)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'IntegerField' object has no attribute 'field'

======================================================================
ERROR: test_only_many_to_many_ignored (defer_regress.tests.DeferRegressionTest.test_only_many_to_many_ignored)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 294, in test_only_many_to_many_ignored
    self.assertEqual(Request.objects.only("items").get(), request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'ManyToManyField' object has no attribute 'field'

======================================================================
ERROR: test_only_with_select_related (defer_regress.tests.DeferRegressionTest.test_only_with_select_related)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 227, in test_only_with_select_related
    self.assertEqual(len(qs), 1)
                     ^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'ForeignKey' object has no attribute 'field'

======================================================================
ERROR: test_proxy_model_defer_with_select_related (defer_regress.tests.DeferRegressionTest.test_proxy_model_defer_with_select_related)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 214, in test_proxy_model_defer_with_select_related
    obj = ProxyRelated.objects.select_related().only("item__name")[0]
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/testbed/django/db/models/query.py", line 448, in __getitem__
    qs._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'ForeignKey' object has no attribute 'field'

======================================================================
ERROR: test_reverse_one_to_one_relations (defer_regress.tests.DeferRegressionTest.test_reverse_one_to_one_relations)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 178, in test_reverse_one_to_one_relations
    self.assertEqual(i.one_to_one_item.name, "second")
                     ^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query_utils.py", line 178, in __get__
    instance.refresh_from_db(fields=[field_name])
  File "/testbed/django/db/models/base.py", line 724, in refresh_from_db
    db_instance = db_instance_qs.get()
                  ^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'CharField' object has no attribute 'field'

======================================================================
ERROR: test_ticket_16409 (defer_regress.tests.DeferRegressionTest.test_ticket_16409)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/defer_regress/tests.py", line 113, in test_ticket_16409
    list(SimpleItem.objects.annotate(Count("feature")).only("name")), list
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 397, in __iter__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'CharField' object has no attribute 'field'

======================================================================
ERROR: test_inheritance_deferred (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_inheritance_deferred)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/select_related_onetoone/tests.py", line 217, in test_inheritance_deferred
    .get(name2="n2")
     ^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 787, in _get_only_select_mask
    self._get_only_select_mask(
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'IntegerField' object has no attribute 'field'

======================================================================
ERROR: test_inheritance_deferred2 (select_related_onetoone.tests.ReverseSelectRelatedTestCase.test_inheritance_deferred2)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/select_related_onetoone/tests.py", line 242, in test_inheritance_deferred2
    p = qs.get(name2="n2")
        ^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 625, in get
    num = len(clone)
          ^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 379, in __len__
    self._fetch_all()
  File "/testbed/django/db/models/query.py", line 1892, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/query.py", line 90, in __iter__
    results = compiler.execute_sql(
              ^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 1549, in execute_sql
    sql, params = self.as_sql()
                  ^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 736, in as_sql
    extra_select, order_by, group_by = self.pre_sql_setup(
                                       ^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 84, in pre_sql_setup
    self.setup_query(with_col_aliases=with_col_aliases)
  File "/testbed/django/db/models/sql/compiler.py", line 73, in setup_query
    self.select, self.klass_info, self.annotation_col_map = self.get_select(
                                                            ^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/compiler.py", line 256, in get_select
    select_mask = self.query.get_select_mask()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 812, in get_select_mask
    return self._get_only_select_mask(opts, mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/db/models/sql/query.py", line 787, in _get_only_select_mask
    self._get_only_select_mask(
  File "/testbed/django/db/models/sql/query.py", line 787, in _get_only_select_mask
    self._get_only_select_mask(
  File "/testbed/django/db/models/sql/query.py", line 782, in _get_only_select_mask
    field_select_mask = select_mask.setdefault(field.field, {})
                                               ^^^^^^^^^^^
AttributeError: 'IntegerField' object has no attribute 'field'

----------------------------------------------------------------------
Ran 39 tests in 0.073s

FAILED (errors=14)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
+ : '>>>>> End Test Output'
+ git checkout 4142739af1cda53581af4169dbe16d6cd5e26948 tests/defer_regress/tests.py tests/select_related_onetoone/tests.py
Updated 2 paths from 1e0e0be247
