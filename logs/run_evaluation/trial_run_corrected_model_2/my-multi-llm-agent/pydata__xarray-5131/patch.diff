```diff
--- a/xarray/core/groupby.py
+++ b/xarray/core/groupby.py
@@ -436,7 +436,7 @@ def __iter__(self):
         return zip(self._unique_coord.values, self._iter_grouped())\n\n    def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,
--- a/xarray/tests/test_groupby.py
+++ b/xarray/tests/test_groupby.py
@@ -388,13 +388,13 @@
 def test_da_groupby_assign_coords():
 def test_groupby_repr(obj, dim):\n    actual = repr(obj.groupby(dim))\n    expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+    expected += ", grouped over %r" % dim
     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n         assert actual == expected\n     elif dim == "y":\n         expected += "1, 2, 3."\n         assert actual == expected\n+
 @pytest.mark.parametrize("obj", [da_3d, ds_3d])\n\ndef test_groupby_repr_datetime(obj):\n    actual = repr(obj.groupby(\"t.month\"))\n    expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += ", grouped over \'month\' "\n+    expected += ", grouped over \'month\'"
     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n    expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n    assert actual == expected
```