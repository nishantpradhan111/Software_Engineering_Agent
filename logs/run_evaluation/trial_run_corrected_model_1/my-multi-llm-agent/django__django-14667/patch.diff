```diff
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -2089,10 +2089,8 @@
             self.deferred_loading = existing.difference(field_names), False
             if new_existing := existing.difference(field_names):
                 self.deferred_loading = new_existing, False
-            else:
+            else: 
                 self.clear_deferred_loading()
-                if new_only := set(field_names).difference(existing):\n+            new_only = set(field_names).difference(existing)
                 if new_only:
                     self.deferred_loading = new_only, True
-
-    def add_immediate_loading(self, field_names):\n

--- a/tests/defer/tests.py
+++ b/tests/defer/tests.py
@@ -52,9 +52,7 @@
         qs = Primary.objects.all()
         self.assert_delayed(qs.only("name", "value").defer("name")[0], 2)
         self.assert_delayed(qs.defer("name").only("value", "name")[0], 2)
-+        self.assert_delayed(qs.defer(\'name\').only(\'name\').only(\'value\')[0], 2)\n         self.assert_delayed(qs.defer("name").only("value")[0], 2)
         self.assert_delayed(qs.only("name").defer("value")[0], 2)
-+        self.assert_delayed(qs.only(\'name\').defer(\'name\').defer(\'value\')[0], 1)\n-+        self.assert_delayed(qs.only(\'name\').defer(\'name\', \'value\')[0], 1)\n-+
+        self.assert_delayed(qs.defer('name').only('name').only('value')[0], 2)
+        self.assert_delayed(qs.only('name').defer('name').defer('value')[0], 1)
+        self.assert_delayed(qs.only('name').defer('name', 'value')[0], 1)
```