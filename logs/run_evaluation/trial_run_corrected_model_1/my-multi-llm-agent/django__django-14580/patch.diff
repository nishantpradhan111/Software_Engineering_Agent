```diff
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -273,7 +273,7 @@ def _format(self):
 class TypeSerializer(BaseSerializer):
     def serialize(self):
         special_cases = [
-            (models.Model, "models.Model", []),\
+            (models.Model, "models.Model", ['from django.db import models']),
             (type(None), 'type(None)', []),\
         ]
         for case, string, imports in special_cases:
```diff
--- a/tests/migrations/test_writer.py
+++ b/tests/migrations/test_writer.py
@@ -658,6 +658,12 @@ def test_serialize_functools_partialmethod(self):
     def test_serialize_type_none(self):
         self.assertSerializedEqual(type(None))
 
+    @skipUnless(
+        connection.features.can_return_rows_from_ddl,
+        "Database doesn't support returning rows from DDL.",
+    )
+
     def test_serialize_type_model(self):
         self.assertSerializedEqual(models.Model)
         self.assertSerializedResultEqual(
```