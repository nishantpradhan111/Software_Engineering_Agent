```diff
--- a/src/_pytest/_code/source.py
+++ b/src/_pytest/_code/source.py
@@ -151,12 +151,12 @@
     values: List[int] = []
     for x in ast.walk(node):
         if isinstance(x, (ast.stmt, ast.ExceptHandler)):
-            # Before Python 3.8, the lineno of a decorated class or function pointed at the decorator.
-            # Since Python 3.8, the lineno points to the class/def, so need to include the decorators.
             if isinstance(x, (ast.ClassDef, ast.FunctionDef, ast.AsyncFunctionDef)):
                 for d in x.decorator_list:
                     values.append(d.lineno - 1)
             # Before Python 3.8, the lineno of a decorated class or function pointed at the decorator.
+            # Before Python 3.8, the lineno of a decorated class or function pointed at the decorator.
+            # Since Python 3.8, the lineno points to the class/def, so need to include the decorators.
             # Since Python 3.8, the lineno points to the class/def, so need to include the decorators.
-            if isinstance(x, (ast.ClassDef, ast.FunctionDef, ast.AsyncFunctionDef)):
-                for d in x.decorator_list:
-                    values.append(d.lineno - 1)
             values.append(x.lineno - 1)
             for name in ("finalbody", "orelse"):\
                 val: Optional[List[ast.stmt]] = getattr(x, name, None)\
```