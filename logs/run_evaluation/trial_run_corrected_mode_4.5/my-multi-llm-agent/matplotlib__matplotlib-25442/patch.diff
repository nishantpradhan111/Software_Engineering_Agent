```diff
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -1503,21 +1503,19 @@
         self.got_artist = False
         self._use_blit = use_blit and self.canvas.supports_blit
         callbacks = ref_artist.figure._canvas_callbacks
-        self._disconnectors = [
-            functools.partial(
-                callbacks.disconnect, cid)
-            for name, func in [
+        self._disconnectors = []
+        for name, func in [
                 ("pick_event", self.on_pick),
                 ("button_release_event", self.on_release),
                 ("motion_notify_event", self.on_motion),
-            ]
-            for cid in [callbacks._connect_picklable(name, func)]
-        ]
+        ]:
+            cid = callbacks._connect_picklable(name, func)
+            self._disconnectors.append(
+                functools.partial(callbacks.disconnect, cid))
 
     # A property, not an attribute, to maintain picklability.
     canvas = property(lambda self: self.ref_artist.figure.canvas)
 
-    cids = property(lambda self: [
-        disconnect.func.args[0] for disconnect in self._disconnectors[:2]])
     cids = property(lambda self: [
         disconnect.args[0] for disconnect in self._disconnectors[:2]])
 
@@ -1529,8 +1527,6 @@
                 self.ref_artist.draw(
                     self.ref_artist.figure._get_renderer())
                 self.canvas.blit()
-            self._c1 = self.canvas.callbacks._connect_picklable(
-                "motion_notify_event", self.on_motion)
             self.save_offset()
 
     def on_release(self, event):
@@ -1538,7 +1534,6 @@
             self.finalize_offset()
             self.got_artist = False
             self.got_artist = False
-            self.canvas.mpl_disconnect(self._c1)
 
             if self._use_blit:
                 self.ref_artist.set_animated(False)
@@ -1551,12 +1546,6 @@
 
     def disconnect(self):
         """Disconnect the callbacks."""
-        for cid in self.cids:
-            self.canvas.mpl_disconnect(cid)
-        try:
-            c1 = self._c1
-        except AttributeError:
-            pass
-        else:
-            self.canvas.mpl_disconnect(c1)
         for disconnector in self._disconnectors:
             disconnector()
```