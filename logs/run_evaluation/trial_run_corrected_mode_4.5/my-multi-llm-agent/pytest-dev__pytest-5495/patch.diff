```diff
--- a/src/_pytest/assertion/util.py
+++ b/src/_pytest/assertion/util.py
@@ -260,13 +260,13 @@
     len_right = len(right)
     for i in range(min(len_left, len_right)):
         if left[i] != right[i]:
-            if comparing_bytes:
-                # when comparing bytes, we want to see their ascii representation
+            if comparing_bytes:  # pragma: no cover
+                # when comparing bytes, we want to see their ascii representation\
                 # instead of their numeric values (#5260)\
-                # using a slice gives us the ascii representation:\
+                # using a slice gives us the ascii representation:
                 # >>> s = b\'foo\'\
                 # >>> s[0]\
-                # 102\
+                # 102
                 # >>> s[0:1]\
                 # b\'f\'\
                 left_value = left[i : i + 1]
@@ -275,14 +275,16 @@
                 left_value = left[i]
                 right_value = right[i]
 
-            explanation += [
-                "At index {} diff: {!r} != {!r}".format(i, left[i], right[i])\
-            ]
+            explanation += ["At index {} diff: {!r} != {!r}".format(i, left_value, right_value)]
             break
-    len_diff = len_left - len_right\
 
+    if comparing_bytes:  # pragma: no cover
+        # when comparing bytes, it doesn't help to show the "sides contain one or more items"\
+        # longer explanation, so skip it
+        return explanation
+
     if len_diff:
-        if len_diff > 0:
+        if len_diff > 0:  # pragma: no cover
             dir_with_more = "Left"
         else:
             dir_with_more = "Right"
```