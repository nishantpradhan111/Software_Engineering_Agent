```diff
--- a/sphinx/ext/autodoc/importer.py
+++ b/sphinx/ext/autodoc/importer.py
@@ -294,24 +294,27 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable
 
     try:
         for cls in getmro(subject):
-            try:
-                modname = safe_getattr(cls, '__module__')
-                qualname = safe_getattr(cls, '__qualname__')
-                analyzer = ModuleAnalyzer.for_module(modname)
-                analyzer.analyze()
-            except AttributeError:
-                qualname = None
-                analyzer = None
-            except PycodeError:
-                analyzer = None
+            modname = safe_getattr(cls, '__module__', None)
+            qualname = safe_getattr(cls, '__qualname__', None)
+            analyzer = None
+            if modname and qualname:
+                try:
+                    analyzer = ModuleAnalyzer.for_module(modname)
+                    analyzer.analyze()
+                except PycodeError:
+                    analyzer = None
 
             # annotation only member (ex. attr: int)
             for name in getannotations(cls):
                 name = unmangle(cls, name)
                 if name and name not in members:
-                    members[name] = ObjectMember(name, INSTANCEATTR, class_=cls)\
+                    docstring = None
+                    if analyzer and (qualname, name) in analyzer.attr_docs:
+                        docstring = '\n'.join(analyzer.attr_docs[qualname, name])
+
+                    members[name] = ObjectMember(name, INSTANCEATTR, class_=cls,
+                                                 docstring=docstring)
+
 
             # append instance attributes (cf. self.attr1) if analyzer knows
             if analyzer:
@@ -319,8 +322,6 @@
                     if ns == qualname and name not in members:
                         members[name] = ObjectMember(name, INSTANCEATTR, class_=cls,
                                                      docstring='\n'.join(docstring))
-            except (AttributeError, PycodeError):\
-                pass
     except AttributeError:
         pass
```