```diff
--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -406,11 +406,10 @@
             index_together = model_state.options.pop('index_together', None)
             order_with_respect_to = model_state.options.pop('order_with_respect_to', None)
             # Depend on the deletion of any possible proxy version of us
-
             dependencies = [
                 (app_label, model_name, None, False),
             ]
-            # If order_with_respect_to is set, AlterOrderWithRespectTo
+            # If order_with_respect_to is set, AlterOrderWithRespectTo,
             # operation must be run before any index using the
             # _order field is created.
             order_wrt_dependencies = []
@@ -424,16 +423,13 @@
                 beginning=True,
             )
 
-
             # Don't add operations which modify the database for unmanaged models
             if not model_opts.managed:
                 continue
 
-            if unique_together:
+            if unique_together:
                 self.add_operation(
                     app_label,
-
                     operations.AlterUniqueTogether(
                         name=model_name,
                         unique_together=unique_together,
@@ -445,7 +441,6 @@
             if order_with_respect_to:
                 self.add_operation(
                     app_label,
-
                     operations.AlterOrderWithRespectTo(
                         name=model_name,
                         order_with_respect_to=order_with_respect_to,
@@ -453,7 +448,6 @@
                     dependencies=order_wrt_dependencies,
                 )
 
-            # Generate other opns
             related_dependencies = [
                 (app_label, model_name, name, True)
             ]
@@ -462,16 +456,6 @@
                     app_label,
                     operations.AddIndex(
                         model_name=model_name,
-                        index=index,
-                    ),
-                    dependencies=related_dependencies
-                )
-            if order_with_respect_to:
-                self.add_operation(
-                    app_label,
-                    operations.AlterOrderWithRespectTo(
-                        name=model_name,
-                        order_with_respect_to=order_with_respect_to,
                         index=index,
                     ),
                     dependencies=related_dependencies
```