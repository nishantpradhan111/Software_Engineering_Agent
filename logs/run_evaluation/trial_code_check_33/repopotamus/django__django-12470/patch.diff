```diff
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -476,11 +476,11 @@
         else:
             asc, desc = ORDER_DIR['DESC']
 
-        order_by = []
+        order_by = [] 
         for field in ordering:
             if hasattr(field, 'resolve_expression'):
                 if isinstance(field, Value):
-                    # output_field must be resolved for constants.
+                    # output_field must be resolved for constants 
                     field = Cast(field, field.output_field)
                 if not isinstance(field, OrderBy):
                     field = field.asc()
@@ -488,11 +488,9 @@
                     field = field.copy()
                     field.reverse_ordering()
                 order_by.append((field, False))
-                continue
+                continue 
             if field == '?':  # random
                 order_by.append((OrderBy(Random()), False))
-                continue
-
+                continue 
             col, order = get_order_dir(field, asc)
             descending = order == 'DESC'
 
@@ -501,6 +499,7 @@
                 order_by.append((
                     OrderBy(Ref(col, self.query.annotation_select[col]), descending=descending),
                     True))
+                continue
                 continue
             if col in self.query.annotations:
                 # References to an expression which is masked out of the SELECT
@@ -509,6 +508,7 @@
                     # output_field must be resolved for constants.
                     expr = Cast(expr, expr.output_field)
                 order_by.append((OrderBy(expr, descending=descending), False))
+                continue
                 continue
 
             if '.' in field:
@@ -519,6 +519,7 @@
                         RawSQL('%s.%s' % (self.quote_name_unless_alias(table), col), []),
                         descending=descending
                     ), False))
+                continue
                 continue
 
             if not self.query.extra or col not in self.query.extra:
@@ -529,7 +530,7 @@
                 else:
                     order_by.append((
                         OrderBy(Ref(col, RawSQL(*self.query.extra[col])), descending=descending),
-                        True))
+                        True)) 
                 result.append((OrderBy(Ref(col, RawSQL(*self.query.extra[col])), descending=descending), (sql, params, True)))
         result = []
         seen = set()
@@ -538,7 +539,7 @@
             resolved = expr.resolve_expression(self.query, allow_joins=True, reuse=None)
             if self.query.combinator:
                 src = resolved.get_source_expressions()[0]
-                # Relabel order by columns to raw numbers if this is a combined
+                # Relabel order by columns to raw numbers if this is a combined 
                 # query; necessary since the columns can't be referenced by the
                 # fully qualified name and the simple column names may collide.
                 for idx, (sel_expr, _, col_alias) in enumerate(self.select):
@@ -555,7 +556,7 @@
                     self.query.add_select_col(src)
                     resolved.set_source_expressions([RawSQL('%d' % len(self.query.select), ())])
             sql, params = self.compile(resolved)
-            # Don't add the same column twice, but the order direction is
+            # Don't add the same column twice, but the order direction is 
             # not taken into account so we strip it. When this entire method
             # is refactored into expressions, then we can check each part as we
             # generate it.
@@ -570,7 +571,6 @@
             result.append((resolved, (sql, params, is_ref)))
         return result
 
-
     def get_extra_select(self, order_by, select):
         extra_select = []
         if self.query.distinct and not self.query.distinct_fields:

```