```diff
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -53,7 +53,6 @@
 
 
 class ResolverMatch:
-    def __init__(self, func, args, kwargs, url_name=None, app_names=None, namespaces=None, route=None, tried=None):
         self.func = func
         self.args = args
         self.kwargs = kwargs
@@ -69,13 +68,13 @@
         self.namespaces = [x for x in namespaces if x] if namespaces else []
         self.namespace = ':'.join(self.namespaces)
 
-        if not hasattr(func, '__name__'):
+        if not hasattr(func, "__name__"):
             # A class-based view
-            self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__
+            self._func_path = func.__class__.__module__ + "." + func.__class__.__name__
         else:
             # A function-based view
-            self._func_path = func.__module__ + '.' + func.__name__
-
+            self._func_path = func.__module__ + "." + func.__name__
+
         view_path = url_name or self._func_path
         self.view_name = ':'.join(self.namespaces + [view_path])
 
@@ -83,12 +82,12 @@
         return (self.func, self.args, self.kwargs)[index]
 
     def __repr__(self):
-        return "ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)" % (
-            self._func_path, self.args, self.kwargs, self.url_name,
-            self.app_names, self.namespaces, self.route,
+        if isinstance(self.func, functools.partial):
+            func = repr(self.func)
+        else:
+            func = self._func_path
+        return (
+            "ResolverMatch(func=%s, args=%r, kwargs=%r, url_name=%r, app_names=%r, namespaces=%r, route=%r)"
+            % (func, self.args, self.kwargs, self.url_name, self.app_names, self.namespaces, self.route)
         )
-
```