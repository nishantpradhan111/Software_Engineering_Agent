```diff
--- a/sympy/printing/pretty/pretty.py
+++ b/sympy/printing/pretty/pretty.py
@@ -1144,19 +1144,10 @@ def _print_BasisDependent(self, expr):\
             if '\\n' in partstr:\
                 tempstr = partstr\
                 tempstr = tempstr.replace(vectstrs[i], '')\
-                if '\\N{RIGHT PARENTHESIS EXTENSION}' in tempstr:   # If scalar is a fraction\
+                if '\\N{RIGHT PARENTHESIS EXTENSION}' in tempstr:  # If scalar is a fraction
                     for paren in range(len(tempstr)):\
                         flag[i] = 1\
-                        if tempstr[paren] == '\\N{right parenthesis extension}':\
-                            tempstr = tempstr[:paren] + '\\N{right parenthesis extension}'\\\
+                        if tempstr[paren] == '\\N{RIGHT PARENTHESIS EXTENSION}' and tempstr.find('\\n', paren + 1) != -1:
+                            tempstr = tempstr[:paren] + '\\N{RIGHT PARENTHESIS EXTENSION}'\\\
                                          + ' '  + vectstrs[i] + tempstr[paren + 1:]\
                             break\
-                elif '\\N{RIGHT PARENTHESIS LOWER HOOK}' in tempstr:\
-                    flag[i] = 1\
-                    tempstr = tempstr.replace('\\N{RIGHT PARENTHESIS LOWER HOOK}',\
-                                        '\\N{RIGHT PARENTHESIS LOWER HOOK}'\
-                                        + ' ' + vectstrs[i])\
-                else:\
-                    tempstr = tempstr.replace('\\N{RIGHT PARENTHESIS UPPER HOOK}',\
-                                        '\\N{RIGHT PARENTHESIS UPPER HOOK}'\
-                                        + ' ' + vectstrs[i])\
                     # We want to place the vector string after all the right parentheses, because
                     # otherwise, the vector will be in the middle of the string. For this reason,
                     # we insert the vector string at the rightmost index.\
```