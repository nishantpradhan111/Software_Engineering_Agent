0) Error Checking
1) Functionality
2) Documentation
3) Compliance

4) Usability
5) Scalability

7) Vulnerabilities
8) Security
















1) Benchmarking (Comparing with older version/different softwares and see how fixes/improvements perform)
2) Peer Review (Someone who has not enough context as the developer of the code)
3) Prototyping (Proof of concept)
4) Usability Testing (User Friendly)(Very important for higher level softwares (close to user))(Might not be implemented for every software)
5) Static Code Analysis (Variables, Function Headers,etc)(Not Runtime)
6) Dynamic Analysis
7) A/B Testing
8) Pilot Testing (Just to check if a major change is good by testing it on smaller groups first)
9) Post_Implementation Review (Customer Review - Celsius Thermometer made instead of Farenheit)
10) Compliance Testing